/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define MAC 0
#define MAC_BINDINGS 1
#define WINDOWS 2
#define WINDOWS_BINDINGS 3
#define LOWER   4
#define RAISE   5
#define ADJUST  6


/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                        tri_layer {
                        if-layers = <LOWER RAISE>;
                        then-layer = <ADJUST>;
                };
        };

        macros {
                ZMK_MACRO(switch_to_mac, bindings= <&bt BT_SEL 0 &to MAC>;)
                ZMK_MACRO(switch_to_windows, bindings= <&bt BT_SEL 1 &to WINDOWS>;)

                ZMK_MACRO(copy_ctrl, bindings= <&kp LC(C)>;)
                ZMK_MACRO(paste_ctrl, bindings= <&kp LC(V)>;)
                ZMK_MACRO(cut_ctrl, bindings= <&kp LC(X)>;)

                ZMK_MACRO(app_switcher_windows, bindings= <&sk LALT &kp TAB &sk LALT>;)
        };

        combos {
                compatible = "zmk,combos";
                combo_spotlight {
                        key-positions = <38 39>;
                        bindings = <&kp LG(SPACE)>;
                        layers = <MAC>;
                };

                combo_spotlight_windows {
                        key-positions = <38 39>;
                        bindings = <&kp LA(SPACE)>;
                        layers = <WINDOWS>;
                };

                combo_app_selector_windows {
                        key-positions = <1 2>;
                        bindings = <&kt LALT &kp TAB>;
                        layers = <WINDOWS>;
                };
        };


        behaviors {
                win_tab: windows_tab {
                        compatible = "zmk,behavior-tap-dance";
                        label = "windows_tab_tap_dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;                                
                        bindings = <&kp TAB>, <&kt LALT>;
                };
                mac_tab: mac_tab {
                        compatible = "zmk,behavior-tap-dance";
                        label = "mac_tab_tap_dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings =<&kp TAB>, <&kt LGUI>;
                };
    };

        keymap {
                compatible = "zmk,keymap";

                mac_layer {
                        bindings = <
   &mac_tab      &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mt LCTRL ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT     &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
           &mo MAC_BINDINGS &mo LOWER &kp SPACE  &mt LSHIFT RET &mo RAISE &kp RALT
                        >;      
                };
                
                mac_bindings_layers {
                        bindings = <
   &trans       &trans          &trans              &trans       &trans       &trans         &kp LG(Y) &trans &trans &trans &trans &trans
   &trans       &kp LG(A)       &kp LG(S)           &kp LG(D)    &kp LG(F)    &trans         &trans    &trans &trans &trans &trans &trans
   &trans       &kp LG(Z)       &kp LG(X)           &kp LG(C)    &kp LG(V)    &trans         &trans    &trans &trans &trans &trans &trans
                                                    &trans       &trans       &trans         &trans    &trans &trans
                        >;
                };

                windows_layer {
                        bindings = <
   &kp TAB                &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mt LCTRL ESC          &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT              &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
               &mo WINDOWS_BINDINGS &mo LOWER &kp SPACE   &mt LSHIFT RET &mo RAISE &kp LGUI
                        >;
                };

                  
                windows_bindings_layers {
                        bindings = <
   &app_switcher_windows        &trans          &trans          &trans       &trans       &trans         &kp LC(Y) &trans &trans &trans &trans &trans
   &trans                       &kp LC(A)       &kp LC(S)       &kp LC(D)    &kp LC(F)    &trans         &trans    &trans &trans &trans &trans &trans
   &trans                       &kp LC(Z)       &kp LC(X)       &kp LC(C)    &kp LC(V)    &trans         &trans    &trans &trans &trans &trans &trans
                                                &trans       &trans       &trans                         &trans    &trans &trans
                        >;
                };
        
                lower_layer {
                        bindings = <
   &trans  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10  &trans   &trans   &trans &trans    &trans &trans
                         &trans &trans &trans   &trans   &trans   &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans    &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };
       
                adjust_layer {
                        bindings = <
   &trans       &trans          &trans              &trans       &trans       &trans         &trans &trans &trans &trans &trans &trans
   &bt BT_CLR   &switch_to_mac  &switch_to_windows  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &trans
   &bootloader  &trans          &trans              &trans       &trans       &trans         &trans &trans &trans &trans &trans &bootloader
                                                    &trans       &trans       &trans         &trans &trans &trans
                        >;
                };       
        }; 
};
